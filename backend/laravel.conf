server {
    listen 80;
    server_name localhost;

    root /var/www/html/public;  # Stellen Sie sicher, dass dies der richtige Pfad in Ihrem Docker-Container ist

    index index.php index.html index.htm;

    # Behandlung der Hauptseite und Weiterleitung an index.php
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Proxy-Pass-Konfiguration für die API-Endpunkte
    location /api {
        proxy_pass http://backend:9000; # Ersetze `backend:9000` mit dem Service-Namen und Port deines Backend-Servers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # PHP ist für das Ausführen von Laravel erforderlich
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass backend:9000;  # Ersetze `backend:9000` mit dem Service-Namen und Port deines PHP-FPM-Servers
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    client_max_body_size 20M;

    # HTTP-Sicherheitsheader hinzufügen
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    # CORS-Header für die Entwicklung (ändern Sie dies für die Produktion angemessen)
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

    # Log-Dateien für Zugriff und Fehler
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
